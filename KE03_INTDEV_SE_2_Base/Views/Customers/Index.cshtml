@model IEnumerable<DataAccessLayer.Models.Customer>

@{
    ViewData["Title"] = "Index";
}

<h1>Customer</h1>

<form asp-action="Index" method="get">
    <div style="position: relative;">
        <button type="button" onclick="toggleDropdown()" style="padding: 6px 12px; background-color: green; color: white; border: none; border-radius: 4px;">Filter</button>

        <div id="filterDropdown" style="display:none; position:absolute; top:40px; left:0; background:#fff; border:1px solid #ccc; padding:15px; z-index:1000; min-width:300px; color: black;">
            <div>
                <strong>Adres bevat:</strong><br />
                <input type="text" name="addressFilter" value="@ViewData["CurrentAddress"]" style="width: 100%; margin-bottom: 10px;" />
            </div>

            <div>
                <strong>Sorteren op naam:</strong><br />
                @{
                    var sortValue = ViewData["NameSortParm"]?.ToString();
                }
                <label><input type="radio" name="nameSort" value="" @(string.IsNullOrEmpty(sortValue) ? "checked" : "") /> A-Z (Oplopend)</label><br />
                <label><input type="radio" name="nameSort" value="desc" @(sortValue == "desc" ? "checked" : "") /> Z-A (Aflopend)</label>
            </div>

            <br />
            <button type="submit" style="padding: 6px 12px; background-color: green; color: white; border: none; border-radius: 4px;">Toepassen</button>
        </div>
    </div>
</form>



<script>
    function toggleDropdown() {
        var dropdown = document.getElementById("filterDropdown");
        dropdown.style.display = dropdown.style.display === "none" ? "block" : "none";
    }
</script>


<script>
    function toggleDropdown() {
        var dropdown = document.getElementById("filterDropdown");
        dropdown.style.display = dropdown.style.display === "none" ? "block" : "none";
    }
</script>

<a asp-action="Create" class="btn btn-createnew" title="Nieuwe klant">
    <i class="bi bi-plus-lg"></i> Nieuwe klant
</a>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Active)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Active)
            </td>
            <td class="text-end">
                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-secondary btn-sm me-1" title="Details">
                    <i class="bi bi-info-circle"></i>
                </a>
                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-secondary btn-sm me-1" title="Bewerken">
                    <i class="bi bi-pencil"></i>
                </a>
                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-secondary btn-sm" title="Verwijderen">
                    <i class="bi bi-trash"></i>
                </a>
            </td>
        </tr>
}
    </tbody>
</table>
